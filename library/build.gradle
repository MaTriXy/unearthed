apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'digital.wup.android-maven-publish'
apply plugin: 'signing'

version = "0.1.1-SNAPSHOT"

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    libraryVariants.all {
        it.getGenerateBuildConfigProvider().configure {
            enabled = false
        }
    }
}

androidExtensions {
    experimental = true
    features = ["parcelize"]
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "androidx.annotation:annotation:1.1.0"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'com.google.truth:truth:1.0.1'
}

def sourcesJarProvider = tasks.register('sourcesJar', Jar) { task ->
    task.archiveClassifier.set('sources')
    task.from(android.sourceSets.main.java.srcDirs)
}

publishing {
    repositories {
        maven {
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            url = project.version.toString().endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = project.hasProperty("NEXUS_USERNAME") ? project.getProperty("NEXUS_USERNAME") : (System.getenv("NEXUS_USERNAME") ?: "")
                password = project.hasProperty("NEXUS_PASSWORD") ? project.getProperty("NEXUS_PASSWORD") : (System.getenv("NEXUS_PASSWORD") ?: "")
            }
        }
    }

    publications {
        mavenAar(MavenPublication) {
            groupId = "de.hannesstruss.unearthed"
            artifactId = "unearthed"
            version = project.version

            pom {
                name = "Unearthed"
                description = "Track process deaths on Android"
                url = "https://github.com/hannesstruss/unearthed"

                developers {
                    developer {
                        id = "hannesstruss"
                        name = "Hannes Struss"
                        email = "x@hannesstruss.de"
                    }
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                scm {
                    connection = "scm:git:git://github.com/hannesstruss/unearthed.git"
                    developerConnection = "scm:git:ssh://github.com/hannesstruss/unearthed.git"
                    url = "https://github.com/hannesstruss/unearthed"
                }
            }

            artifact(sourcesJarProvider.get())

            from components.android
        }
    }
}

signing {
    sign publishing.publications.mavenAar
}
